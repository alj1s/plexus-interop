//
// Copyright 2017-2019 Plexus Interop Deutsche Bank AG
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package interop;

import "interop/unique_id.proto";
import "interop/app_launch_mode.proto";
import "interop/app_connection_descriptor.proto";
import "interop/invocation_descriptor.proto";
import "google/protobuf/empty.proto";

service AppMetadataService {
    rpc GetAppMetadataChangedEventStream (google.protobuf.Empty) returns (AppMetadataChangedEvent);
    rpc GetMetamodelChangedEventStream (google.protobuf.Empty) returns (MetamodelChangedEvent);
}

message AppMetadataChangedEvent {
    repeated AppMetadataInfo apps = 1;
}

message AppMetadataInfo {
    string id = 1;
    string display_name = 2;
    string launcher_id = 3;
    repeated KeyValuePair launcher_params = 4;
}

message MetamodelChangedEvent {
    repeated .interop.AppMetamodelInfo applications = 1;
    repeated Service services = 2;
}

message AppMetamodelInfo {
    string id = 1;
    repeated ConsumedService consumed_services = 2;
    repeated ProvidedService provided_services = 3;
    repeated KeyValuePair options = 4;
}

message ProvidedService {
    string service_id = 1;
    repeated ProvidedMethod methods = 2;
    repeated string provided_to = 3;
    string alias = 4;
    repeated KeyValuePair options = 5;
}

message ConsumedService {
    string service_id = 1;
    repeated ConsumedMethod methods = 2;
    repeated string consumed_from = 3;
    string alias = 4;
    repeated KeyValuePair options = 5;
}

message ConsumedMethod {
    string name = 1;
    repeated KeyValuePair options = 2;
}

message ProvidedMethod {
    string name = 1;
    repeated KeyValuePair options = 2;
}

message Service {
    string id = 1;
    repeated MethodInfo methods = 2;
    repeated KeyValuePair options = 3;
}

message MethodInfo {
    string name = 1;
    string title = 2;
    string request_message_id = 3;
    string response_message_id = 4;
    MethodType type = 5;
    repeated KeyValuePair options = 6;
}

enum MethodType {
    Unary = 0;
    ServerStreaming = 1;
    ClientStreaming = 2;
    DuplexStreaming = 3;
}

message KeyValuePair {
    string key = 1;
    string value = 2;
}