//
// Copyright 2017-2019 Plexus Interop Deutsche Bank AG
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package com.db.plexus.interop.dsl.protobuf.tests;

import "google/protobuf/descriptor.proto";
import "com/db/plexus/interop/dsl/protobuf/tests/example2.proto";

option csharp_namespace="Plexus.Interop.Generated";
option (int_option)=1;

extend google.protobuf.FileOptions {
	uint32 int_option = 9000;
}

extend google.protobuf.MessageOptions {
	string message_opt = 9000;
}

extend google.protobuf.FieldOptions {
	string string_option = 9000;
	Enum2 enum_option = 9100;
}

extend google.protobuf.ServiceOptions {
	string service_id = 9000;
}

extend google.protobuf.MethodOptions {
	string method_id = 9000;
}

enum Enum2 {
	VALUE_1 = 1;
	VALUE_2 = 2;
	VALUE_3 = 3;
}

message Message1 {
	string string_field_1 = 1;
	sint32 sint32_field_1 = 2;

	map<sint32, .com.db.plexus.interop.dsl.protobuf.tests.Message2> map_field_1 = 99;

	.com.db.plexus.interop.dsl.protobuf.tests.Enum1 enum_field_1 = 3;
	Message2 message_field_1 = 10;
	Message2.SubEnum1 external_sun_enum_1 = 11;
	Message3 external_file_message = 13;

	reserved 'reserve3', 'reserve4';

	oneof oneOfField {
		.com.db.plexus.interop.dsl.protobuf.tests.Message2 oneof_case_1 = 16;
		Message3 oneof_case_2 = 17;
	}

	reserved 'reserve1', 'reserve2';

	reserved 100 to 999, 10000;

	subfolder.Message4 msg4_field = 5;
}

enum Enum1 {
}

message Message2 {
	enum SubEnum1 {
	}

	message SubMessage1 {
		message SubMessage1 {
		}
	}

	message SubMessage2 {
		SubMessage1.SubMessage1 sub_sub_field_1 = 1 [(tests.string_option)="aaa", (.com.db.plexus.interop.dsl.protobuf.tests.enum_option) = VALUE_2];
		SubMessage1 sub_field_1 = 2;
	}

	option (message_opt) = "aaa";

	SubMessage1 sub_message_field_1 = 1;
}

service Service1 {        
	rpc ServerStream (Message1) returns (stream Message2);
	rpc DuplexStream (stream Message2) returns (stream tests.Message2) { option (protobuf.tests.method_id)="xxx"; }
	option (service_id) = "Service1";
}